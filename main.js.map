{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/render/canvas/LabelCache.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/rbush/index.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/source/ol-geocoder.js","webpack:///./node_modules/ol/ol.css?05fa","webpack:///./node_modules/ol/ol.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js","webpack:///./node_modules/quickselect/quickselect.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/pointer/EventSource.js","webpack:///./node_modules/ol/pointer/MouseSource.js","webpack:///./node_modules/ol/pointer/MsSource.js","webpack:///./node_modules/ol/pointer/NativeSource.js","webpack:///./node_modules/ol/pointer/PointerEvent.js","webpack:///./node_modules/ol/pointer/TouchSource.js","webpack:///./node_modules/ol/pointer/PointerEventHandler.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control/util.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/source/Stamen.js","webpack:///./node_modules/ol/source/BingMaps.js","webpack:///./node_modules/ol/net.js","webpack:///./node_modules/ol/source/ol-layerswitcher.js","webpack:///./main.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","equals","extend","extendCoordinate","extendFlatCoordinates","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getForViewAndSize","getHeight","getIntersection","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","ii","length","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","extendCoordinates","flatCoordinates","offset","end","stride","extendXY","Math","min","max","callback","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","keys","removeListenerMap","opt_once","callOnce","addEventListener","evt","bindListener","push","indexOf","splice","abstract","Error","getUid","VERSION","uidCounter_","obj","ol_uid","String","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","Array","angleInRadians","PI","angleInDegrees","a","b","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","extendStatics","__extends","setPrototypeOf","__proto__","__","this","constructor","canvas_LabelCache","_super","LabelCache","opt_highWaterMark","_this","consumers","clear","consumer","canvas","consumerId","util","prune","outer","canExpireCache","peekLastKey","pop","width","height","release","LRUCache","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureAndCacheTextWidth","measureTextWidths","rotateAtOffset","drawImage","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","context","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","css","fontFamily","setInterval","dom","div","heights","document","createElement","innerHTML","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","cache","lines","widths","numLines","currentWidth","offsetX","offsetY","translate","rotate","resetTransform","transform","opacity","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","setFromArray","makeScale","compose","makeInverse","toString","set","e","f","transform1","transform2","dx1","dy1","sx","sy","angle","dx2","dy2","source","det","join","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","assign","getValues","var_sources","TypeError","output","arguments","values","proj_Projection","Projection","options","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","Units","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","METERS","point","math","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","log","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","epsg4326_PROJECTIONS","transforms","transforms_add","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","sphere","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","proj_transform","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","transformExtent","ol_extent","transformWithProjections","addCommon","TRUE","FALSE","VOID","createCanvasContext2D","opt_width","opt_height","getContext","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","oldValue","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","numberSafeCompareFunction","linearFindNearest","arr","direction","reverseSubArray","begin","data","extension","isArray","remove","found","arr1","arr2","len1","isSorted","opt_func","opt_strict","compare","every","currentVal","index","res","IDLE","LOADING","LOADED","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","split","ANIMATING","INTERACTING","Event","propagationStopped","preventDefault","stopPropagation","FEET","PIXELS","TILE_PIXELS","USFEET","ADD","REMOVE","XY","XYZ","XYM","XYZM","UNDEFINED","READY","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","Property","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","array","getArray","item","insertAt","elem","removeAt","prev","setAt","opt_except","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","_events_js__WEBPACK_IMPORTED_MODULE_1__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_Event_js__WEBPACK_IMPORTED_MODULE_3__","Target","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","disposeInternal","hasListener","opt_type","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_Base_js__WEBPACK_IMPORTED_MODULE_3__","_Property_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_6__","_source_State_js__WEBPACK_IMPORTED_MODULE_7__","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","map","setMap","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","handleSourceChange_","changed","render","frameState","layerRenderer","getRenderer","layerState","prepareFrame","renderFrame","PRECOMPOSE","renderEvent","managed","getZIndex","zIndex","layerStatesArray","createRenderer","visible","minResolution","maxResolution","PRERENDER","POSTRENDER","POSTCOMPOSE","RENDERCOMPLETE","transform2D","opt_dest","dest","anchor","anchorX","anchorY","Disposable","disposed_","dispose","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","map_","listenerKeys","setTarget","getMap","getOverlayContainerStopEvent","getElementById","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","color","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","ends","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","Stroke","color_","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","getColor","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDash","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","unByKey","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","Observable","revision_","getRevision","on","once","un","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","opt_ends","douglasPeucker","snap","quantizeArray","_math_js__WEBPACK_IMPORTED_MODULE_0__","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","tolerance","round","quantize","simplifiedEnds","asString","asArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","fromString","g","exec","el","rgb","getComputedStyle","fromNamed","hasAlpha","parseInt","substr","normalize","Number","fromStringInternal_","toFunction","createDefaultStyle","createEditingStyle","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_Circle_js__WEBPACK_IMPORTED_MODULE_2__","_Fill_js__WEBPACK_IMPORTED_MODULE_3__","_Stroke_js__WEBPACK_IMPORTED_MODULE_4__","Style","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","fill_","fill","image_","renderer","stroke_","stroke","text_","zIndex_","getGeometry","getFill","getImage","getStroke","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","feature","setZIndex","styleFunction","styles_1","defaultStyles","radius","styles","white","blue","concat","tmpTransform","ol_transform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","getSimplifiedGeometry","getType","intersectsExtent","proj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","flat_transform","ol_Object","SimpleGeometry_extends","SimpleGeometry_SimpleGeometry","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","MOVESTART","MOVEEND","shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","expire","iconImage","src","crossOrigin","getKey","setSize","maxCacheSize","Fill","getDistance","DEFAULT_RADIUS","c1","c2","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","distance","bearing","lon1","dByR","lat","asin","style_RegularShape","RegularShape","rotateWithView","canvas_","hitDetectionCanvas_","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","anchor_","size_","imageSize_","hitDetectionImageSize_","render_","getPoints","getRadius","getRadius2","getAngle","getRotation","getRotateWithView","setOpacity","getOpacity","setScale","getScale","getAnchor","getHitDetectionImage","pixelRatio","getImageSize","getHitDetectionImageSize","getImageState","ImageState","getOrigin","getSize","listenImageChange","thisArg","load","unlistenImageChange","strokeStyle","strokeWidth","colorlike","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","drawHitDetectionCanvas_","Image","Circle_extends","CircleStyle","setRadius","AssertionError","message","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","BaseLayer","properties","className_","className","state_","getClassName","state","layer","sourceState","getVisible","getMaxResolution","getMinResolution","setMaxResolution","setMinResolution","setVisible","zindex","_events_Event_js__WEBPACK_IMPORTED_MODULE_0__","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","opt_glContext","inversePixelTransform","glContext","highWaterMark","count_","entries_","oldest_","newest_","getCount","containsKey","entry","value_","key_","newer","older","peekLast","peekFirstKey","replace","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_State_js__WEBPACK_IMPORTED_MODULE_3__","Source","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","loading","wrapX_","wrapX","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getWrapX","refresh","setAttributions","setState","attributionLike","rbush","default","quickselect","maxEntries","format","_maxEntries","_minEntries","ceil","_initFormat","findItem","items","equalsFn","calcBBox","toBBox","distBBox","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","multiSelect","right","mid","all","_all","search","bbox","result","childBBox","nodesToSearch","collides","insert","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","pow","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","siblings","compareArr","Function","ImageStyle","opacity_","rotateWithView_","rotation_","scale_","setRotateWithView","setRotation","LayerRenderer","layer_","loadedTileCallback","tiles","zoom","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","getDataAtPixel","pixel","getLayer","handleImageChange_","renderIfReadyAndVisible","hasFeatureAtCoordinate","loadImage","imageState","events","events_EventType","State","Layer_extends","Layer_CanvasLayerRenderer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","clip","halfWidth","halfHeight","viewState","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","render_canvas","moveTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","EventType","postRender","getRenderTransform","renderPixel","getImageData","err","Uint8Array","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","Point","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","render_VectorContext","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","GeometryType","getOrientedFlatCoordinates","getEndss","myEnds","inflate","getEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","origin","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextPlacement","TextBuilder_extends","TEXT_ALIGN","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Circle","Default","LineString","Polygon","Text","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","textAlign","flatOffset","flatEnd","oo","range","drawChars_","geometryWidths","overflow","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","canvas_BuilderGroup","BuilderGroup","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","DEFAULT","IMAGE","TEXT","lineStringLength","drawTextOnPath","startM","previousAngle","numChars","segmentM","segmentLength","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","delta","interpolate","unshift","Executor_extends","tmpExtent","p1","p2","p3","p4","canvas_Executor","Executor","overlaps","declutterTree","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","getTextImage","label","align","lineHeight","renderWidth","leftRight","strokeText","fillText","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","strokePadding","declutterArgs","origin_1","repeatSize","restore","renderDeclutter_","groupCount","box","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","fn","coords","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","z","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","clearRect","declutteredFeatures","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","imageData","i_1","j_1","result_1","executor","zs","opt_builderTypes","opt_declutterReplays","builderTypes","0","floor","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","vectorLayer","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","canvasTransform","projectionExtent","vectorSource","clipExtent","clipped","viewHints","ViewHint","skippedFeatureUids","worldWidth","world","transform_1","transform_2","parseFloat","layer_1","features_1","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","gutter","loadFeatures","dirty","features_2","forEachFeatureInExtent","replayGroupInstructions","executorGroup","getOverlaps","canvas_Layer","Vector_extends","Vector_VectorLayer","VectorLayer","FormatType","ARRAY_BUFFER","JSON","XML","featureloader_xhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","features","dataProjection","addFeatures","functions","loadingstrategy_all","VectorEventType","structs_RBush","RBush","opt_maxEntries","rbush_","items_","extents","uid","update","getAll","getInExtent","forEach_","forEachInExtent","ol_obj","VectorSourceEvent","opt_feature","Vector_VectorSource","VectorSource","loader_","format_","url_","loader","asserts","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","ObjectEventType","valid","id","getId","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","u","namespace","spin","hidden","address","country","city","road","olControl","glass","container","control","button","expanded","reset","inputText","icon","containerId","buttonControlId","inputQueryId","inputResetId","cssClasses","freeze","v","q","provider","placeholder","featureStyle","targetType","lang","limit","keepOpen","autoComplete","autoCompleteMinLength","debug","E","window","performance","Date","now","getTime","timing","navigationStart","T","test","P","O","S","D","classList","_","R","getElementsByClassName","getElementsByTagName","querySelectorAll","A","classname","attr","setAttribute","createDocumentFragment","RegExp","trim","setTimeout","els","createControl","B","F","settings","params","langs","V","addressdetails","countrycodes","accept-language","Q","U","callbackName","query","includeNeighborhood","maxResults","G","countrycode","pretty","no_annotations","Base","layerName","toLowerCase","newProvider","lastQuery","registeredListeners","mapClick","setListeners","getParameters","handleResponse","postcode","original","formatted","details","display_name","houseNumber","house_number","town","neighbourhood","resourceSets","resources","formattedAddress","results","lng","components","H","which","keyCode","clearTimeout","focus","clearResults","collapse","expand","firstChild","jsonp","Promise","reduce","encodeURIComponent","head","random","fetch","method","credentials","then","json","catch","$","console","info","createList","listenMapClick","addressTemplate","chosen","getView","fit","duration","animate","createFeature","addLayer","setId","building","village","I","blur","getTargetElement","handleEvent","getLayers","setProvider","setProviderKey","content","hmr","insertInto","locals","useSourceMap","list","cssMapping","btoa","sourceMapping","sourceMap","unescape","stringify","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","memo","stylesInDom","isOldIE","atob","getElement","styleTarget","querySelector","HTMLIFrameElement","contentDocument","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","refs","addStyle","listToStyles","newStyles","base","media","insertStyleElement","lastStyleElementInsertedAtTop","nextSibling","before","removeStyleElement","idx","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","link","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","blob","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","cssNode","location","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","factory","createStyleFunction","_Object_js__WEBPACK_IMPORTED_MODULE_3__","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","handleGeometryChange_","ol_MapEvent","MapEvent","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","ua","navigator","userAgent","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","TileState","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","getViewportClampedResolution","viewportSize","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_isMoving","cappedMaxRes","disable","rotationconstraint_none","ViewProperty","coordinate1","coordinate2","cosAngle","sinAngle","easeIn","easeOut","inAndOut","linear","area_linearRing","twiceArea","area_linearRings","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","deflate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","isNaN","intersectsLineString","coordinatesExtent","ret","point1","point2","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","Polygon_extends","Polygon_Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","fromExtent","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","ol_proj","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smooth","smoothResolutionConstraint","resolutions","constrainResolution","capped","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","newResolution","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","onlyCenter","smoothExtentConstraint","viewWidth","viewHeight","ratio","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setCenter","setResolution","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","var_args","isDef","getAnimating","animate_","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","metrics","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","baseLevel","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","adjustCenter","deltaCoordinates","adjustResolution","isMoving","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","Group_extends","LAYERS","Group","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","toSize","PluggableMap_extends","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","getLayerGroup","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","layerFilter","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","getTarget","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","getOverlayContainer","tileSourceKey","tileCenter","tileResolution","wantedTiles","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","lowOnFrameBudget","time","render_EventType","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","usedTiles","MapEventType","setLayerGroup","setView","skipFeature","computedStyle","offsetWidth","unskipFeature","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label_","activeLabel","title","handleClick_","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","setCollapsible","display","handleToggle_","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","autoHide_","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","zoomByDelta_","currentZoom","newZoom","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","interaction_Property","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","DragPan_extends","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","Map_extends","expireIconCache","renderer_Map","MapRenderer","layerRenderers_","layerRendererListeners_","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","layerStates","getLayerRenderer","callback_1","layerKey","handleLayerRendererChange_","getLayerRenderers","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","layerStatesMap","acc","Composite_extends","Composite","CompositeMapRenderer","children_","render_Event","ol_Map_extends","ol_Map","Map","zoomOptions","rotateOptions","attribution","attributionOptions","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","interaction_defaults","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileRange","containsTileRange","ol_TileRange","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","zDirection","isDrawableTile","tileState","getTile","getInterimTile","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","transition","getTileImage","getOpaque","alphaChanged","endTransition","postRenderFunction","expireCache","tileCache","opt_tileCallback","getTileCoordCenter","useTile","canvas_TileLayer","Tile_extends","layer_Tile","TileLayer","ERROR_THRESHOLD","ol_Tile_extends","ol_Tile","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","getTileCoord","ImageTile_extends","getBlankImage","ctx","fillRect","ol_ImageTile","ImageTile","tileLoadFunction","crossOrigin_","src_","imageListenerKeys_","tileLoadFunction_","unlistenImage_","handleImageError_","handleImageLoad_","naturalWidth","naturalHeight","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","TileCache_extends","ol_TileCache","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","opt_renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","triangulation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","reproj_render","leftToLoad_1","sourceListenKey_1","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTileUrlFunctions","tileUrlFunctions","hash","nullTileUrlFunction","tmpTileCoord","tilegrid_TileGrid","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","Corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","self","screen","availWidth","availHeight","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","worldsAway","withinExtentAndZ","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","setTileUrlFunction","match","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","templates","createFromTemplates","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","XYZ_extends","source_XYZ","OSM_extends","ATTRIBUTION","source_OSM","OSM","Stamen_extends","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","providerConfig","layerConfig","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","opt_errback","opt_callbackParam","script","async","timer","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","epsg4326Extent","CSS_PREFIX","ol_layerswitcher_LayerSwitcher","[object Object]","super","groupSelectStyle","getGroupSelectStyle","mapListeners","hiddenClassName","isTouchDevice_","shownClassName","panel","enableTouchScroll_","this_","onmouseover","showPanel","onclick","onmouseout","toElement","hidePanel","renderPanel","ensureTopVisibleBaseLayerShown_","forEachRecursive","setGroupVisibility","setChildVisibility","ul","renderLayers_","changedLyr","lyr","lyrs","getGroupsAndLayers","isBaseGroup","descendantVisibility","groupVisible","groupIndeterminate","lastVisibleBaseLyr","setVisible_","filterFn","li","lyrTitle","checkboxId","uuid","btn","toggleFold_","indeterminate","onchange","htmlFor","rsl","elm","renderLayer_","scrollStartPos","scrollTop","pageY","createEvent","ol","LayerSwitcher","main_map","searchResultSource","source_Vector","searchResultLayer","Vector","geocoder","ol_geocoder_default","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","IconOrigin","Icon_extends","Icon_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize","ol_color","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Image"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 76);\n","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.6';\n//# sourceMappingURL=util.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    ERROR: 'error',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/math\n */\nimport { assert } from './asserts.js';\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n    assert(0 < x, 29); // `x` must be greater than `0`\n    return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerState = this.getLayerState();\n                layerState.managed = false;\n                if (this.getZIndex() === undefined) {\n                    layerState.zIndex = Infinity;\n                }\n                renderEvent.frameState.layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function () {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: true\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var chunk = '';\n    var chunkLength = 0;\n    var data, index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text.charAt(index);\n        chunk = reverse ? char + chunk : chunk + char;\n        var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n        chunkLength += charLength;\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        if (previousAngle == angle) {\n            if (reverse) {\n                data[0] = x;\n                data[1] = y;\n                data[2] = charLength / 2;\n            }\n            data[4] = chunk;\n        }\n        else {\n            chunk = char;\n            chunkLength = charLength;\n            data = [x, y, charLength / 2, angle, chunk];\n            if (reverse) {\n                result.unshift(data);\n            }\n            else {\n                result.push(data);\n            }\n            previousAngle = angle;\n        }\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {?}\n         */\n        _this.declutterTree = declutterTree;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = (width + strokeWidth);\n            var context = createCanvasContext2D(Math.ceil(renderWidth * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * label.width / scale + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    Executor.prototype.renderDeclutter_ = function (declutterGroup, feature) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!this.declutterTree.collides(box)) {\n                    this.declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.renderDeclutter_(declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {?} declutterTree Declutter tree for declutter processing in postrender.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = declutterTree;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        var canvas = this.hitDetectionContext_.canvas;\n        canvas.width = canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    if (declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(executor, transform.slice(0));\n                        }\n                    }\n                    else {\n                        result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlisten } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport { labelCache } from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * Declutter tree.\n         * @private\n         */\n        _this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        listen(labelCache, EventType.CLEAR, _this.handleFontsChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.disposeInternal = function () {\n        unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        if (this.declutterTree_) {\n            this.declutterTree_.clear();\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel);\n                startX -= worldWidth;\n            }\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback.call(thisArg, feature, layer_1);\n                }\n            }, null);\n            return result;\n        }\n    };\n    /**\n     * @param {import(\"../../events/Event.js\").default} event Event.\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function (event) {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, !!this.declutterTree_);\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport rbush from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = rbush(opt_maxEntries, undefined);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/*!\n * ol-geocoder - v4.0.0\n * A geocoder extension for OpenLayers.\n * https://github.com/jonataswalker/ol-geocoder\n * Built: Wed Oct 09 2019 11:36:42 GMT-0300 (Brasilia Standard Time)\n */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e(require(\"ol/control/Control\"),require(\"ol/style/Style\"),require(\"ol/style/Icon\"),require(\"ol/layer/Vector\"),require(\"ol/source/Vector\"),require(\"ol/geom/Point\"),require(\"ol/Feature\"),require(\"ol/proj\")):\"function\"==typeof define&&define.amd?define([\"ol/control/Control\",\"ol/style/Style\",\"ol/style/Icon\",\"ol/layer/Vector\",\"ol/source/Vector\",\"ol/geom/Point\",\"ol/Feature\",\"ol/proj\"],e):(t=t||self).Geocoder=e(t.ol.control.Control,t.ol.style.Style,t.ol.style.Icon,t.ol.layer.Vector,t.ol.source.Vector,t.ol.geom.Point,t.ol.Feature,t.ol.proj)}(this,function(t,a,i,n,s,r,o,d){\"use strict\";t=t&&t.hasOwnProperty(\"default\")?t.default:t,a=a&&a.hasOwnProperty(\"default\")?a.default:a,i=i&&i.hasOwnProperty(\"default\")?i.default:i,n=n&&n.hasOwnProperty(\"default\")?n.default:n,s=s&&s.hasOwnProperty(\"default\")?s.default:s,r=r&&r.hasOwnProperty(\"default\")?r.default:r,o=o&&o.hasOwnProperty(\"default\")?o.default:o,d=d&&d.hasOwnProperty(\"default\")?d.default:d;var e=\"gcd-container\",l=\"gcd-button-control\",c=\"gcd-input-query\",u=\"gcd-input-reset\",p={namespace:\"ol-geocoder\",spin:\"gcd-pseudo-rotate\",hidden:\"gcd-hidden\",address:\"gcd-address\",country:\"gcd-country\",city:\"gcd-city\",road:\"gcd-road\",olControl:\"ol-control\",glass:{container:\"gcd-gl-container\",control:\"gcd-gl-control\",button:\"gcd-gl-btn\",input:\"gcd-gl-input\",expanded:\"gcd-gl-expanded\",reset:\"gcd-gl-reset\",result:\"gcd-gl-result\"},inputText:{container:\"gcd-txt-container\",control:\"gcd-txt-control\",input:\"gcd-txt-input\",reset:\"gcd-txt-reset\",icon:\"gcd-txt-glass\",result:\"gcd-txt-result\"}},h={containerId:e,buttonControlId:l,inputQueryId:c,inputResetId:u,cssClasses:p},m=Object.freeze({__proto__:null,containerId:e,buttonControlId:l,inputQueryId:c,inputResetId:u,cssClasses:p,default:h}),g=\"addresschosen\",f=\"nominatim\",y=\"reverse\",v=\"glass-button\",w=\"text-input\",b=\"osm\",k=\"mapquest\",C=\"photon\",x=\"bing\",L=\"opencage\",q={provider:b,placeholder:\"Search for an address\",featureStyle:null,targetType:v,lang:\"en-US\",limit:5,keepOpen:!1,preventDefault:!1,autoComplete:!1,autoCompleteMinLength:2,debug:!1};function E(t,e){if(void 0===e&&(e=\"Assertion failed\"),!t){if(\"undefined\"!=typeof Error)throw new Error(e);throw e}}function j(t){var e=function(){if(\"performance\"in window==!1&&(window.performance={}),Date.now=Date.now||function(){return(new Date).getTime()},\"now\"in window.performance==!1){var t=Date.now();performance.timing&&performance.timing.navigationStart&&(t=performance.timing.navigationStart),window.performance.now=function(){return Date.now()-t}}return window.performance.now()}().toString(36);return t?t+e:e}function T(t){return/^\\d+$/.test(t)}function P(t,e,n){if(Array.isArray(t))t.forEach(function(t){return P(t,e)});else for(var s=Array.isArray(e)?e:e.split(/\\s+/),r=s.length;r--;)N(t,s[r])||O(t,s[r],n)}function S(t,e,n){if(Array.isArray(t))t.forEach(function(t){return S(t,e,n)});else for(var s=Array.isArray(e)?e:e.split(/\\s+/),r=s.length;r--;)N(t,s[r])&&D(t,s[r],n)}function N(t,e){return t.classList?t.classList.contains(e):_(e).test(t.className)}function R(t,e,n){void 0===e&&(e=window.document);var s=Array.prototype.slice,r=[];if(/^(#?[\\w-]+|\\.[\\w-.]+)$/.test(t))switch(t[0]){case\"#\":r=[function(t){return t=\"#\"===t[0]?t.substr(1,t.length):t,document.getElementById(t)}(t.substr(1))];break;case\".\":r=s.call(e.getElementsByClassName(t.substr(1).replace(/\\./g,\" \")));break;default:r=s.call(e.getElementsByTagName(t))}else r=s.call(e.querySelectorAll(t));return n?r:r[0]}function I(t,n){return t.replace(/\\{ *([\\w_-]+) *\\}/g,function(t,e){return function(t){return String(t).replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\"/g,\"&quot;\").replace(/'/g,\"&#039;\")}(void 0===n[e]?\"\":n[e])})}function A(t,e){var n;if(Array.isArray(t)){if(n=document.createElement(t[0]),t[1].id&&(n.id=t[1].id),t[1].classname&&(n.className=t[1].classname),t[1].attr){var s=t[1].attr;if(Array.isArray(s))for(var r=-1;++r<s.length;)n.setAttribute(s[r].name,s[r].value);else n.setAttribute(s.name,s.value)}}else n=document.createElement(t);n.innerHTML=e;for(var o=document.createDocumentFragment();n.childNodes[0];)o.appendChild(n.childNodes[0]);return n.appendChild(o),n}function _(t){return new RegExp(\"(^|\\\\s+) \"+t+\" (\\\\s+|$)\")}function O(t,e,n){t.classList?t.classList.add(e):t.className=(t.className+\" \"+e).trim(),n&&T(n)&&window.setTimeout(function(){return D(t,e)},n)}function D(t,e,n){t.classList?t.classList.remove(e):t.className=t.className.replace(_(e),\" \").trim(),n&&T(n)&&window.setTimeout(function(){return O(t,e)},n)}function M(t){this.options=t.options,this.els=this.createControl()}var B=m.cssClasses;M.prototype.createControl=function(){var t,e,n;return(n=this.options.targetType===w?(e=B.namespace+\" \"+B.inputText.container,{container:t=A([\"div\",{id:m.containerId,classname:e}],M.input),control:R(\".\"+B.inputText.control,t),input:R(\".\"+B.inputText.input,t),reset:R(\".\"+B.inputText.reset,t),result:R(\".\"+B.inputText.result,t)}):(e=B.namespace+\" \"+B.glass.container,{container:t=A([\"div\",{id:m.containerId,classname:e}],M.glass),control:R(\".\"+B.glass.control,t),button:R(\".\"+B.glass.button,t),input:R(\".\"+B.glass.input,t),reset:R(\".\"+B.glass.reset,t),result:R(\".\"+B.glass.result,t)})).input.placeholder=this.options.placeholder,n},M.glass=['<div class=\"',B.glass.control,\" \",B.olControl,'\">','<button type=\"button\"',' id=\"',m.buttonControlId,'\"',' class=\"',B.glass.button,'\"></button>','<input type=\"text\"',' id=\"',m.inputQueryId,'\"',' class=\"',B.glass.input,'\"',' autocomplete=\"off\" placeholder=\"Search ...\">',\"<a\",' id=\"',m.inputResetId,'\"',' class=\"',B.glass.reset,\" \",B.hidden,'\"',\"></a>\",\"</div>\",'<ul class=\"',B.glass.result,'\"></ul>'].join(\"\"),M.input=['<div class=\"',B.inputText.control,'\">','<input type=\"text\"',' id=\"',m.inputQueryId,'\"',' class=\"',B.inputText.input,'\"',' autocomplete=\"off\" placeholder=\"Search ...\">','<span class=\"',B.inputText.icon,'\"></span>','<button type=\"button\"',' id=\"',m.inputResetId,'\"',' class=\"',B.inputText.reset,\" \",B.hidden,'\"',\"></button>\",\"</div>\",'<ul class=\"',B.inputText.result,'\"></ul>'].join(\"\");function F(){this.settings={url:\"https://photon.komoot.de/api/\",params:{q:\"\",limit:10,lang:\"en\"},langs:[\"de\",\"it\",\"fr\",\"en\"]}}F.prototype.getParameters=function(t){return t.lang=t.lang.toLowerCase(),{url:this.settings.url,params:{q:t.query,limit:t.limit||this.settings.params.limit,lang:-1<this.settings.langs.indexOf(t.lang)?t.lang:this.settings.params.lang}}},F.prototype.handleResponse=function(t){if(t.features.length)return t.features.map(function(t){return{lon:t.geometry.coordinates[0],lat:t.geometry.coordinates[1],address:{name:t.properties.name,postcode:t.properties.postcode,city:t.properties.city,state:t.properties.state,country:t.properties.country},original:{formatted:t.properties.name,details:t.properties}}})};function V(){this.settings={url:\"https://nominatim.openstreetmap.org/search/\",params:{q:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}V.prototype.getParameters=function(t){return{url:this.settings.url,params:{q:t.query,format:this.settings.params.format,addressdetails:this.settings.params.addressdetails,limit:t.limit||this.settings.params.limit,countrycodes:t.countrycodes||this.settings.params.countrycodes,\"accept-language\":t.lang||this.settings.params[\"accept-language\"]}}},V.prototype.handleResponse=function(t){if(t.length)return t.map(function(t){return{lon:t.lon,lat:t.lat,address:{name:t.display_name,road:t.address.road||\"\",houseNumber:t.address.house_number||\"\",postcode:t.address.postcode,city:t.address.city||t.address.town,state:t.address.state,country:t.address.country},original:{formatted:t.display_name,details:t.address}}})};function Q(){this.settings={url:\"http://open.mapquestapi.com/nominatim/v1/search.php\",params:{q:\"\",key:\"\",format:\"json\",addressdetails:1,limit:10,countrycodes:\"\",\"accept-language\":\"en-US\"}}}Q.prototype.getParameters=function(t){return{url:this.settings.url,params:{q:t.query,key:t.key,format:\"json\",addressdetails:1,limit:t.limit||this.settings.params.limit,countrycodes:t.countrycodes||this.settings.params.countrycodes,\"accept-language\":t.lang||this.settings.params[\"accept-language\"]}}},Q.prototype.handleResponse=function(t){if(t.length)return t.map(function(t){return{lon:t.lon,lat:t.lat,address:{name:t.address.neighbourhood||\"\",road:t.address.road||\"\",postcode:t.address.postcode,city:t.address.city||t.address.town,state:t.address.state,country:t.address.country},original:{formatted:t.display_name,details:t.address}}})};function U(){this.settings={url:\"https://dev.virtualearth.net/REST/v1/Locations\",callbackName:\"jsonp\",params:{query:\"\",key:\"\",includeNeighborhood:0,maxResults:10}}}U.prototype.getParameters=function(t){return{url:this.settings.url,callbackName:this.settings.callbackName,params:{query:t.query,key:t.key,includeNeighborhood:t.includeNeighborhood||this.settings.params.includeNeighborhood,maxResults:t.maxResults||this.settings.params.maxResults}}},U.prototype.handleResponse=function(t){var e=t.resourceSets[0].resources;if(e.length)return e.map(function(t){return{lon:t.point.coordinates[1],lat:t.point.coordinates[0],address:{name:t.name},original:{formatted:t.address.formattedAddress,details:t.address}}})};function G(){this.settings={url:\"https://api.opencagedata.com/geocode/v1/json?\",params:{q:\"\",key:\"\",limit:10,countrycode:\"\",pretty:1,no_annotations:1}}}function $(s){return new Promise(function(t,e){var n=function(t,e){e&&\"object\"==typeof e&&(t+=(/\\?/.test(t)?\"&\":\"?\")+function n(s){return Object.keys(s).reduce(function(t,e){return t.push(\"object\"==typeof s[e]?n(s[e]):encodeURIComponent(e)+\"=\"+encodeURIComponent(s[e])),t},[]).join(\"&\")}(e));return t}(s.url,s.data);s.jsonp?function(t,e,n){var s=document.head,r=document.createElement(\"script\"),o=\"f\"+Math.round(Math.random()*Date.now());r.setAttribute(\"src\",t+(0<t.indexOf(\"?\")?\"&\":\"?\")+e+\"=\"+o),window[o]=function(t){window[o]=void 0,setTimeout(function(){return s.removeChild(r)},0),n(t)},s.appendChild(r)}(n,s.callbackName,t):fetch(n,{method:\"GET\",mode:\"cors\",credentials:\"same-origin\"}).then(function(t){return t.json()}).then(t).catch(e)})}G.prototype.getParameters=function(t){return{url:this.settings.url,params:{q:t.query,key:t.key,limit:t.limit||this.settings.params.limit,countrycode:t.countrycodes||this.settings.params.countrycodes}}},G.prototype.handleResponse=function(t){if(t.results.length)return t.results.map(function(t){return{lon:t.geometry.lng,lat:t.geometry.lat,address:{name:t.components.house_number||\"\",road:t.components.road||\"\",postcode:t.components.postcode,city:t.components.city||t.components.town,state:t.components.state,country:t.components.country},original:{formatted:t.formatted,details:t.components}}})};function z(t,e){this.Base=t,this.layerName=j(\"geocoder-layer-\"),this.layer=new n({name:this.layerName,source:new s}),this.options=t.options,this.options.provider=\"string\"==typeof this.options.provider?this.options.provider.toLowerCase():this.options.provider,this.provider=this.newProvider(),this.els=e,this.lastQuery=\"\",this.container=this.els.container,this.registeredListeners={mapClick:!1},this.setListeners()}var H=m.cssClasses;return z.prototype.setListeners=function(){var n,s,r=this;this.els.input.addEventListener(\"keypress\",function(t){var e=t.target.value.trim();(t.key?\"Enter\"!==t.key:t.which?13!==t.which:!t.keyCode||13!==t.keyCode)||(t.preventDefault(),r.query(e))},!1),this.els.input.addEventListener(\"click\",function(t){t.stopPropagation()},!1),this.els.input.addEventListener(\"input\",function(t){var e=t.target.value.trim();e.length?S(r.els.reset,H.hidden):P(r.els.reset,H.hidden),r.options.autoComplete&&e!==s&&(s=e,n&&clearTimeout(n),n=setTimeout(function(){e.length>=r.options.autoCompleteMinLength&&r.query(e)},200))},!1),this.els.reset.addEventListener(\"click\",function(t){r.els.input.focus(),r.els.input.value=\"\",r.lastQuery=\"\",P(r.els.reset,H.hidden),r.clearResults()},!1),this.options.targetType===v&&this.els.button.addEventListener(\"click\",function(t){t.stopPropagation(),N(r.els.control,H.glass.expanded)?r.collapse():r.expand()},!1)},z.prototype.query=function(t){var n=this;this.provider||(this.provider=this.newProvider());var e=this.provider.getParameters({query:t,key:this.options.key,lang:this.options.lang,countrycodes:this.options.countrycodes,limit:this.options.limit});if(this.lastQuery!==t||!this.els.result.firstChild){this.lastQuery=t,this.clearResults(),P(this.els.reset,H.spin);var s={url:e.url,data:e.params};e.callbackName&&(s.jsonp=!0,s.callbackName=e.callbackName),$(s).then(function(t){n.options.debug&&console.info(t),S(n.els.reset,H.spin);var e=n.provider.handleResponse(t);e&&(n.createList(e),n.listenMapClick())}).catch(function(t){S(n.els.reset,H.spin);var e=A(\"li\",\"<h5>Error! No internet connection?</h5>\");n.els.result.appendChild(e)})}},z.prototype.createList=function(t){var s=this,r=this.els.result;t.forEach(function(e){var n;switch(s.options.provider){case b:n='<span class=\"'+H.road+'\">'+e.address.name+\"</span>\";break;default:n=s.addressTemplate(e.address)}var t=A(\"li\",'<a href=\"#\">'+n+\"</a>\");t.addEventListener(\"click\",function(t){t.preventDefault(),s.chosen(e,n,e.address,e.original)},!1),r.appendChild(t)})},z.prototype.chosen=function(t,e,n,s){var r=this.Base.getMap(),o=[parseFloat(t.lon),parseFloat(t.lat)],a=r.getView().getProjection(),i=d.transform(o,\"EPSG:4326\",a),l=t.bbox;l=l&&d.transformExtent(l,\"EPSG:4326\",a);var c={formatted:e,details:n,original:s};if(!1===this.options.keepOpen&&this.clearResults(!0),!0===this.options.preventDefault)this.Base.dispatchEvent({type:g,address:c,coordinate:i,bbox:l});else{l?r.getView().fit(l,{duration:500}):function(t,e,n,s){s=s||2.388657133911758,n=n||500,t.getView().animate({duration:n,resolution:s},{duration:n,center:e})}(r,i);var u=this.createFeature(i,c);this.Base.dispatchEvent({type:g,address:c,feature:u,coordinate:i,bbox:l})}},z.prototype.createFeature=function(t){var e=new o(new r(t));return this.addLayer(),e.setStyle(this.options.featureStyle),e.setId(j(\"geocoder-ft-\")),this.getSource().addFeature(e),e},z.prototype.addressTemplate=function(t){var e=[];return t.name&&e.push(['<span class=\"',H.road,'\">{name}</span>'].join(\"\")),(t.road||t.building||t.house_number)&&e.push(['<span class=\"',H.road,'\">{building} {road} {house_number}</span>'].join(\"\")),(t.city||t.town||t.village)&&e.push(['<span class=\"',H.city,'\">{postcode} {city} {town} {village}</span>'].join(\"\")),(t.state||t.country)&&e.push(['<span class=\"',H.country,'\">{state} {country}</span>'].join(\"\")),I(e.join(\"<br>\"),t)},z.prototype.newProvider=function(){switch(this.options.provider){case b:return new V;case k:return new Q;case C:return new F;case x:return new U;case L:return new G;default:return this.options.provider}},z.prototype.expand=function(){var t=this;S(this.els.input,H.spin),P(this.els.control,H.glass.expanded),window.setTimeout(function(){return t.els.input.focus()},100),this.listenMapClick()},z.prototype.collapse=function(){this.els.input.value=\"\",this.els.input.blur(),P(this.els.reset,H.hidden),S(this.els.control,H.glass.expanded),this.clearResults()},z.prototype.listenMapClick=function(){if(!this.registeredListeners.mapClick){var e=this,n=this.Base.getMap().getTargetElement();this.registeredListeners.mapClick=!0,n.addEventListener(\"click\",{handleEvent:function(t){e.clearResults(!0),n.removeEventListener(t.type,this,!1),e.registeredListeners.mapClick=!1}},!1)}},z.prototype.clearResults=function(t){t&&this.options.targetType===v?this.collapse():function(t){for(;t.firstChild;)t.removeChild(t.firstChild)}(this.els.result)},z.prototype.getSource=function(){return this.layer.getSource()},z.prototype.addLayer=function(){var e=this,n=!1,t=this.Base.getMap();t.getLayers().forEach(function(t){t===e.layer&&(n=!0)}),n||t.addLayer(this.layer)},function(r){function o(t,e){if(void 0===t&&(t=f),void 0===e&&(e={}),!(this instanceof o))return new o;var n;E(\"string\"==typeof t,\"@param `type` should be string!\"),E(t===f||t===y,\"@param 'type' should be '\"+f+\"'\\n        or '\"+y+\"'!\"),E(\"object\"==typeof e,\"@param `options` should be object!\"),q.featureStyle=[new a({image:new i({scale:.7,src:\"//cdn.rawgit.com/jonataswalker/map-utils/master/images/marker.png\"})})],this.options=function(t,e){var n={};for(var s in t)n[s]=t[s];for(var r in e)n[r]=e[r];return n}(q,e),this.container=void 0;var s=new M(this);t===f&&(this.container=s.els.container,n=new z(this,s.els),this.layer=n.layer),r.call(this,{element:this.container})}return r&&(o.__proto__=r),((o.prototype=Object.create(r&&r.prototype)).constructor=o).prototype.getLayer=function(){return this.layer},o.prototype.getSource=function(){return this.getLayer().getSource()},o.prototype.setProvider=function(t){this.options.provider=t},o.prototype.setProviderKey=function(t){this.options.key=t},o}(t)});\n","\nvar content = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/dist/cjs.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/dist/cjs.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n  transition: all 0.25s;\\n}\\n.ol-scale-bar {\\n  position: absolute;\\n  bottom: 8px;\\n  left: 8px;\\n}\\n.ol-scale-step-marker {\\n  width: 1px;\\n  height: 15px;\\n  background-color: #000000;\\n  float: right;\\n  z-Index: 10;\\n}\\n.ol-scale-step-text {\\n  position: absolute;\\n  bottom: -5px;\\n  font-size: 12px;\\n  z-Index: 11;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-text {\\n  position: absolute;\\n  font-size: 14px;\\n  text-align: center;\\n  bottom: 25px;\\n  color: #000000;\\n  text-shadow: -2px 0 #FFFFFF, 0 2px #FFFFFF, 2px 0 #FFFFFF, 0 -2px #FFFFFF;\\n}\\n.ol-scale-singlebar {\\n  position: relative;\\n  height: 10px;\\n  z-Index: 9;\\n  border: 1px solid black;\\n}\\n\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom`, and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        return createExtent(options.extent, options.constrainOnlyCenter, options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true);\n    }\n    else {\n        return centerNone;\n    }\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            this.renderer_.removeLayerRenderers();\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var layer = layers[i];\n        if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n            return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n        }\n        else {\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (!this.panning_) {\n                this.panning_ = true;\n                this.getMap().getView().beginInteraction();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         * @type {!Object<string, import(\"./Layer.js\").default>}\n         */\n        _this.layerRenderers_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         */\n        _this.layerRendererListeners_ = {};\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * Removes all layer renderers.\n     */\n    MapRenderer.prototype.removeLayerRenderers = function () {\n        for (var key in this.layerRenderers_) {\n            this.removeLayerRendererByKey_(key).dispose();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @protected\n     * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n     */\n    MapRenderer.prototype.getLayerRenderer = function (layer) {\n        var layerKey = getUid(layer);\n        if (layerKey in this.layerRenderers_) {\n            return this.layerRenderers_[layerKey];\n        }\n        var renderer = layer.getRenderer();\n        if (!renderer) {\n            return null;\n        }\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n        return renderer;\n    };\n    /**\n     * @protected\n     * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n     */\n    MapRenderer.prototype.getLayerRenderers = function () {\n        return this.layerRenderers_;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handle changes in a layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.handleLayerRendererChange_ = function () {\n        this.map_.render();\n    };\n    /**\n     * @param {string} layerKey Layer key.\n     * @return {import(\"./Layer.js\").default} Layer renderer.\n     * @private\n     */\n    MapRenderer.prototype.removeLayerRendererByKey_ = function (layerKey) {\n        var layerRenderer = this.layerRenderers_[layerKey];\n        delete this.layerRenderers_[layerKey];\n        unlistenByKey(this.layerRendererListeners_[layerKey]);\n        delete this.layerRendererListeners_[layerKey];\n        return layerRenderer;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    /**\n     * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function (frameState) {\n        var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n        var _loop_1 = function (layerKey) {\n            if (!(layerKey in layerStatesMap)) {\n                frameState.postRenderFunctions.push(function () {\n                    this.removeLayerRendererByKey_(layerKey).dispose();\n                }.bind(this_1));\n            }\n        };\n        var this_1 = this;\n        for (var layerKey in this.layerRenderers_) {\n            _loop_1(layerKey);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n    return layerStatesArray.reduce(function (acc, state) {\n        acc[getUid(state.layer)] = state;\n        return acc;\n    }, {});\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleRemoveUnusedLayerRenderers(frameState);\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = this.getLayerRenderer(layer);\n                if (!layerRenderer) {\n                    continue;\n                }\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control/util.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            this.tileLoadFunction_(this, this.src_);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","import Control from 'ol/control/Control';\nimport { unByKey } from 'ol/Observable';\n\nvar CSS_PREFIX = 'layer-switcher-';\n\n/**\n * OpenLayers Layer Switcher Control.\n * See [the examples](./examples) for usage.\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param {Object} opt_options Control options, extends ol/control/Control~Control#options adding:\n * @param {String} opt_options.tipLabel the button tooltip.\n * @param {String} opt_options.groupSelectStyle either `'none'` - groups don't get a checkbox,\n *   `'children'` (default) groups have a checkbox and affect child visibility or\n *   `'group'` groups have a checkbox but do not alter child visibility (like QGIS).\n */\nexport default class LayerSwitcher extends Control {\n\n    constructor(opt_options) {\n\n        var options = opt_options || {};\n\n        var tipLabel = options.tipLabel ?\n            options.tipLabel : 'Legend';\n\n        var element = document.createElement('div');\n\n        super({element: element, target: options.target});\n\n        this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n\n        this.mapListeners = [];\n\n        this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            this.hiddenClassName += ' touch';\n        }\n        this.shownClassName = 'shown';\n\n        element.className = this.hiddenClassName;\n\n        var button = document.createElement('button');\n        button.setAttribute('title', tipLabel);\n        element.appendChild(button);\n\n        this.panel = document.createElement('div');\n        this.panel.className = 'panel';\n        element.appendChild(this.panel);\n        LayerSwitcher.enableTouchScroll_(this.panel);\n\n        var this_ = this;\n\n        button.onmouseover = function(e) {\n            this_.showPanel();\n        };\n\n        button.onclick = function(e) {\n            e = e || window.event;\n            this_.showPanel();\n            e.preventDefault();\n        };\n\n        this_.panel.onmouseout = function(e) {\n            e = e || window.event;\n            if (!this_.panel.contains(e.toElement || e.relatedTarget)) {\n                this_.hidePanel();\n            }\n        };\n\n    }\n\n    /**\n    * Set the map instance the control is associated with.\n    * @param {ol/Map~Map} map The map instance.\n    */\n    setMap(map) {\n        // Clean up listeners associated with the previous map\n        for (var i = 0, key; i < this.mapListeners.length; i++) {\n            unByKey(this.mapListeners[i]);\n        }\n        this.mapListeners.length = 0;\n        // Wire up listeners etc. and store reference to new map\n        super.setMap(map);\n        if (map) {\n            var this_ = this;\n            this.mapListeners.push(map.on('pointerdown', function() {\n                this_.hidePanel();\n            }));\n            this.renderPanel();\n        }\n    }\n\n    /**\n    * Show the layer panel.\n    */\n    showPanel() {\n        if (!this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.add(this.shownClassName);\n            this.renderPanel();\n        }\n    }\n\n    /**\n    * Hide the layer panel.\n    */\n    hidePanel() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.remove(this.shownClassName);\n        }\n    }\n\n    /**\n    * Re-draw the layer panel to represent the current state of the layers.\n    */\n    renderPanel() {\n        LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n            groupSelectStyle: this.groupSelectStyle\n        });\n    }\n\n    /**\n    * **Static** Re-draw the layer panel to represent the current state of the layers.\n    * @param {ol/Map~Map} map The OpenLayers Map instance to render layers for\n    * @param {Element} panel The DOM Element into which the layer tree will be rendered\n    */\n    static renderPanel(map, panel, options) {\n\n        options = options || {};\n\n        options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n\n        LayerSwitcher.ensureTopVisibleBaseLayerShown_(map);\n\n        while(panel.firstChild) {\n            panel.removeChild(panel.firstChild);\n        }\n\n        // Reset indeterminate state for all layers and groups before\n        // applying based on groupSelectStyle\n        LayerSwitcher.forEachRecursive(map, function(l, idx, a) {\n            l.set('indeterminate', false);\n        });\n\n        if (options.groupSelectStyle === 'children' || options.groupSelectStyle === 'none') {\n            // Set visibile and indeterminate state of groups based on\n            // their children's visibility\n            LayerSwitcher.setGroupVisibility(map);\n        } else if (options.groupSelectStyle === 'group') {\n            // Set child indetermiate state based on their parent's visibility\n            LayerSwitcher.setChildVisibility(map);\n        }\n\n        var ul = document.createElement('ul');\n        panel.appendChild(ul);\n        // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n        LayerSwitcher.renderLayers_(map, map, ul, options, function render(changedLyr) {\n            // console.log('render');\n            LayerSwitcher.renderPanel(map, panel, options);\n        });\n\n    }\n\n    static isBaseGroup(lyr) {\n        let lyrs = (lyr.getLayers) ? lyr.getLayers().getArray() : [];\n        return lyrs.length && lyrs[0].get('type') === 'base';\n    }\n\n    static setGroupVisibility(map) {\n        // Get a list of groups, with the deepest first\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l.getLayers && !l.get('combine') && !LayerSwitcher.isBaseGroup(l));\n        }).reverse();\n        // console.log(groups.map(g => g.get('title')));\n        groups.forEach(function (group) {\n                // TODO Can we use getLayersArray, is it public in the esm build?\n                let descendantVisibility = group.getLayersArray().map(function (l) {\n                    let state = l.getVisible();\n                    // console.log('>', l.get('title'), state);\n                    return state;\n                });\n                // console.log(descendantVisibility);\n                if (descendantVisibility.every(function (v) {return v === true})) {\n                    group.setVisible(true);\n                    group.set('indeterminate', false);\n                } else if (descendantVisibility.every(function (v) {return v === false})) {\n                    group.setVisible(false);\n                    group.set('indeterminate', false);\n                } else {\n                    group.setVisible(true);\n                    group.set('indeterminate', true);\n                }\n            }\n        );\n    }\n\n    static setChildVisibility(map) {\n        // console.log('setChildVisibility');\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l.getLayers && !l.get('combine') && !LayerSwitcher.isBaseGroup(l));\n        });\n        groups.forEach(function (group) {\n            // console.log(group.get('title'));\n            var groupVisible = group.getVisible();\n            var groupIndeterminate = group.get('indeterminate');\n            group.getLayers().getArray().forEach(function (l) {\n                // console.log('>', l.get('title'));\n                l.set('indeterminate', false);\n                if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                    l.set('indeterminate', true);\n                }\n            });\n        });\n    }\n\n    /**\n    * **Static** Ensure only the top-most base layer is visible if more than one is visible.\n    * @param {ol/Map~Map} map The map instance.\n    * @private\n    */\n    static ensureTopVisibleBaseLayerShown_(map) {\n        var lastVisibleBaseLyr;\n        LayerSwitcher.forEachRecursive(map, function(l, idx, a) {\n            if (l.get('type') === 'base' && l.getVisible()) {\n                lastVisibleBaseLyr = l;\n            }\n        });\n        if (lastVisibleBaseLyr) LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true);\n    }\n\n    static getGroupsAndLayers(lyr, filterFn) {\n        let layers = [];\n        filterFn = filterFn || function (l, idx, a) { return true };\n        LayerSwitcher.forEachRecursive(lyr, function(l, idx, a) {\n            if (l.get('title')) {\n                if (filterFn(l, idx, a)) {\n                    layers.push(l);\n                }\n            }\n        });\n        return layers;\n    }\n\n    /**\n    * **Static** Toggle the visible state of a layer.\n    * Takes care of hiding other layers in the same exclusive group if the layer\n    * is toggle to visible.\n    * @private\n    * @param {ol/Map~Map} map The map instance.\n    * @param {ol/layer/Base~BaseLayer} The layer whose visibility will be toggled.\n    */\n    static setVisible_(map, lyr, visible, groupSelectStyle) {\n        // console.log(lyr.get('title'), visible, groupSelectStyle);\n        lyr.setVisible(visible);\n        if (visible && lyr.get('type') === 'base') {\n            // Hide all other base layers regardless of grouping\n            LayerSwitcher.forEachRecursive(map, function(l, idx, a) {\n                if (l != lyr && l.get('type') === 'base') {\n                    l.setVisible(false);\n                }\n            });\n        }\n        if (lyr.getLayers && !lyr.get('combine') && groupSelectStyle === 'children') {\n            lyr.getLayers().forEach(l => {\n                LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n            });\n        }\n    }\n\n    /**\n    * **Static** Render all layers that are children of a group.\n    * @private\n    * @param {ol/Map~Map} map The map instance.\n    * @param {ol/layer/Base~BaseLayer} lyr Layer to be rendered (should have a title property).\n    * @param {Number} idx Position in parent group list.\n    */\n    static renderLayer_(map, lyr, idx, options, render) {\n\n        var li = document.createElement('li');\n\n        var lyrTitle = lyr.get('title');\n\n        var checkboxId = LayerSwitcher.uuid();\n\n        var label = document.createElement('label');\n\n        if (lyr.getLayers && !lyr.get('combine')) {\n\n            const isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n\n            li.classList.add('group');\n            if (isBaseGroup) {\n                li.classList.add(CSS_PREFIX + 'base-group');\n            }\n\n            // Group folding\n            if (lyr.get('fold')) {\n              li.classList.add(CSS_PREFIX + 'fold');\n              li.classList.add(CSS_PREFIX + lyr.get('fold'));\n              const btn = document.createElement('button');\n              btn.onclick = function (e) {\n                LayerSwitcher.toggleFold_(lyr, li);\n              };\n              li.appendChild(btn);\n            }\n\n            if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                const input = document.createElement('input');\n                input.type = 'checkbox';\n                input.id = checkboxId;\n                input.checked = lyr.getVisible();\n                input.indeterminate = lyr.get('indeterminate');\n                input.onchange = function(e) {\n                    LayerSwitcher.setVisible_(map, lyr, e.target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(input);\n                label.htmlFor = checkboxId;\n            }\n\n            label.innerHTML = lyrTitle;\n            li.appendChild(label);\n            var ul = document.createElement('ul');\n            li.appendChild(ul);\n\n            LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n\n        } else {\n\n            li.className = 'layer';\n            var input = document.createElement('input');\n            if (lyr.get('type') === 'base') {\n                input.type = 'radio';\n                input.name = 'base';\n            } else {\n                input.type = 'checkbox';\n            }\n            input.id = checkboxId;\n            input.checked = lyr.get('visible');\n            input.indeterminate = lyr.get('indeterminate');\n            input.onchange = function(e) {\n                LayerSwitcher.setVisible_(map, lyr, e.target.checked, options.groupSelectStyle);\n                render(lyr);\n            };\n            li.appendChild(input);\n\n            label.htmlFor = checkboxId;\n            label.innerHTML = lyrTitle;\n\n            var rsl = map.getView().getResolution();\n            if (rsl > lyr.getMaxResolution() || rsl < lyr.getMinResolution()){\n                label.className += ' disabled';\n            }\n\n            li.appendChild(label);\n\n        }\n\n        return li;\n\n    }\n\n    /**\n    * **Static** Render all layers that are children of a group.\n    * @private\n    * @param {ol/Map~Map} map The map instance.\n    * @param {ol/layer/Group~LayerGroup} lyr Group layer whose children will be rendered.\n    * @param {Element} elm DOM element that children will be appended to.\n    */\n    static renderLayers_(map, lyr, elm, options, render) {\n        var lyrs = lyr.getLayers().getArray().slice().reverse();\n        for (var i = 0, l; i < lyrs.length; i++) {\n            l = lyrs[i];\n            if (l.get('title')) {\n                elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n            }\n        }\n    }\n\n    /**\n    * **Static** Call the supplied function for each layer in the passed layer group\n    * recursing nested groups.\n    * @param {ol/layer/Group~LayerGroup} lyr The layer group to start iterating from.\n    * @param {Function} fn Callback which will be called for each `ol/layer/Base~BaseLayer`\n    * found under `lyr`. The signature for `fn` is the same as `ol/Collection~Collection#forEach`\n    */\n    static forEachRecursive(lyr, fn) {\n        lyr.getLayers().forEach(function(lyr, idx, a) {\n            fn(lyr, idx, a);\n            if (lyr.getLayers) {\n                LayerSwitcher.forEachRecursive(lyr, fn);\n            }\n        });\n    }\n\n    /**\n    * **Static** Generate a UUID\n    * Adapted from http://stackoverflow.com/a/2117523/526860\n    * @returns {String} UUID\n    */\n    static uuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        });\n    }\n\n    /**\n    * @private\n    * @desc Apply workaround to enable scrolling of overflowing content within an\n    * element. Adapted from https://gist.github.com/chrismbarr/4107472\n    */\n    static enableTouchScroll_(elm) {\n        if(LayerSwitcher.isTouchDevice_()){\n            var scrollStartPos = 0;\n            elm.addEventListener(\"touchstart\", function(event) {\n                scrollStartPos = this.scrollTop + event.touches[0].pageY;\n            }, false);\n            elm.addEventListener(\"touchmove\", function(event) {\n                this.scrollTop = scrollStartPos - event.touches[0].pageY;\n            }, false);\n        }\n    }\n\n    /**\n    * @private\n    * @desc Determine if the current browser supports touch events. Adapted from\n    * https://gist.github.com/chrismbarr/4107472\n    */\n    static isTouchDevice_() {\n        try {\n            document.createEvent(\"TouchEvent\");\n            return true;\n        } catch(e) {\n            return false;\n        }\n    }\n\n    /**\n    * Fold/unfold layer group\n    * @private\n    */\n    static toggleFold_(lyr, li) {\n        li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n        lyr.set('fold', (lyr.get('fold')==='open') ? 'close' : 'open');\n        li.classList.add(CSS_PREFIX + lyr.get('fold'));\n    }\n\n    /**\n     * If a valid groupSelectStyle value is not provided then return the default\n     * @private\n     */\n    static getGroupSelectStyle(groupSelectStyle) {\n        return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0\n                        ? groupSelectStyle\n                        : 'children';\n    }\n\n}\n\n\n// Expose LayerSwitcher as ol.control.LayerSwitcher if using a full build of\n// OpenLayers\nif (window.ol && window.ol.control) {\n    window.ol.control.LayerSwitcher = LayerSwitcher;\n}\n","import 'ol/ol.css';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport VectorLayer from 'ol/layer/Vector';\nimport Vector from 'ol/source/Vector';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport Style from 'ol/style/Style';\nimport Text from 'ol/style/Text';\nimport Stroke from 'ol/style/Stroke';\nimport * as olProj from 'ol/proj';\nimport OSM from 'ol/source/OSM';\nimport Circle from 'ol/style/Circle';\nimport Fill from 'ol/style/Fill';\nimport Stamen from 'ol/source/Stamen';\nimport BingMaps from 'ol/source/BingMaps';\nimport LayerSwitcher from 'ol/source/ol-layerswitcher';\nimport Geocoder from 'ol/source/ol-geocoder';\n\n\nconst map = new Map({\n  target: 'map',\n  view: new View({\n    center: olProj.fromLonLat([16.372, 48.209]),\n    zoom: 14\n  })\n});\n\n//Watercolor\nmap.addLayer(new TileLayer({\n\ttitle: 'watercolor',\n\ttype: 'base',\n    source: new Stamen({\n        layer: 'watercolor',\n\t\tvisible: false\n    })\n}));\n\n//BingMaps\nmap.addLayer(new TileLayer({\n\ttitle: 'Bing',\n\ttype: 'base',\n\tsource: new BingMaps({\n\tkey: 'Auj_QkN4cbeT0AIn4Dq-lLk1zsqobx3tpwmekXJgjSFFp0AN48MsogkxCjGZkns9',\n    imagerySet: 'Aerial',\n\tvisible: false\n\t})\n}));\t\n\n//OpenStreetMap\nmap.addLayer(new TileLayer({\n\ttitle: 'OSM',\n\ttype: 'base',\n\tsource: new OSM()\n}));\t\n\nconst searchResultSource = new Vector();\nconst searchResultLayer = new VectorLayer({\n  source: searchResultSource\n});\n\nsearchResultLayer.setStyle(new Style({\n  image: new Circle({\n    fill: new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    }),\n    stroke: new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    }),\n    radius: 15\n  })\n}));\nmap.addLayer(searchResultLayer);\nmap.addControl(new LayerSwitcher());\n\n// Koordinatensuche\nvar geocoder = new Geocoder('nominatim', {\n  provider: 'osm',\n  lang: 'en',\n  placeholder: 'Search for ...',\n  limit: 5,\n  debug: false,\n  autoComplete: true,\n  keepOpen: true\n});\nmap.addControl(geocoder);\n  \n//Listen when an address is chosen\ngeocoder.on('addresschosen', function (evt) {\n\tconsole.info(evt);\n  geocoder.getSource().clear();\n  geocoder.getSource().addFeature(evt.feature);\n});\n","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport { listenOnce, unlistenByKey } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.imageListenerKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            this.imageListenerKeys_ = [\n                listenOnce(this.image_, EventType.ERROR, this.handleImageError_, this),\n                listenOnce(this.image_, EventType.LOAD, this.handleImageLoad_, this)\n            ];\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        this.imageListenerKeys_.forEach(unlistenByKey);\n        this.imageListenerKeys_ = null;\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map"],"sourceRoot":""}